---
import { getCollection, render } from "astro:content";
import Container from "@components/Container.astro";
import { WORK } from "@consts";
import PageLayout from "@layouts/Layout.astro";
import { dateRange } from "@lib/utils";

const workCollection = (await getCollection("works")).sort(
	(a, b) =>
		new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf(),
);

const educationCollection = (await getCollection("educations")).sort(
	(a, b) =>
		new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf(),
);

const works = await Promise.all(
	workCollection.map(async (item) => {
		const { Content } = await render(item);
		return { ...item, Content };
	}),
);

const educations = await Promise.all(
	educationCollection.map(async (item) => {
		const { Content } = await render(item);
		return { ...item, Content };
	}),
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Work Experience
      </div>
      <ul class="flex flex-col space-y-4">
        {
          works.map(entry => (
            <li class="animate">
              <div class="font-semibold text-black dark:text-white">
                {entry.data.company}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.role}
              </div>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <article>
                <!-- <entry.Content /> -->
              </article>
            </li>
          ))
        }
      </ul>
      <div class="animate font-semibold text-black dark:text-white">
        Education
      </div>
      <ul class="flex flex-col space-y-4">
        { 
          educations.map(entry => (
            <li class="animate">
              <div class="font-semibold text-black dark:text-white">
                {entry.data.university}
              </div>
              </div>
                 <div class="text-sm opacity-75">
                {entry.data.major}
              </div>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              <article>
                <!-- <entry.Content /> -->
              </article>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</PageLayout>
