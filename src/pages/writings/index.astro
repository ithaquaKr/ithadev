---
import { type CollectionEntry, getCollection } from "astro:content";
import ArrowCard from "@components/ArrowCard.astro";
import Container from "@components/Container.astro";
import { WRITINGS } from "@consts";
import Layout from "@layouts/Layout.astro";

const data = (await getCollection("writings"))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
	[year: string]: CollectionEntry<"writings">[];
};

const posts = data.reduce((acc: Acc, post) => {
	const year = post.data.date.getFullYear().toString();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(post);
	return acc;
}, {});

const years = Object.keys(posts).sort(
	(a, b) => Number.parseInt(b) - Number.parseInt(a),
);

const allPosts = await getCollection("writings", ({ data }) => !data.draft);
const tags = [
	...new Set(allPosts.flatMap((post) => post.data.tags || [])),
].sort();
---

<Layout title={WRITINGS.TITLE} description={WRITINGS.DESCRIPTION}>
  <Container>
    <div class="space-y-2 pb-10">
      <h1 class="animate font-semibold">Tags</h1>
      <div class="animate flex flex-wrap gap-2">
        {
          tags.map((tag) => (
            <a
              href={`/writings/tags/${tag}`}
              class="rounded-sm border border-black/15 px-2 py-1 text-xs transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
            >
              {tag}{" "}
              <span class="text-sm text-gray-600">
                ({allPosts.filter((post) => post.data.tags?.includes(tag)).length})
              </span>
            </a>
          ))
        }
      </div>
    </div>
    <aside>
      <div class="space-y-10">
        <div class="space-y-4">
          {
            years.map((year) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">
                  {year}
                </div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {posts[year].map((post) => (
                      <li>
                        <ArrowCard entry={post} />
                      </li>
                    ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</Layout>
