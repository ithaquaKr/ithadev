---
import { cn } from "@lib/utils";
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === `/${subpath?.[0]}`;
---

<a
	href={href}
	class={cn(
		'header-nav-link',
		'hover:text-black dark:hover:text-white',
		'hover:font-medium hover:cursor-pointer transition-all duration-100 ease-in-out',
		isActive
			? 'text-black dark:text-white font-medium'
			: 'text-gray-400 dark:text-gray-500 font-medium'
	)}
	data-nav-link
	{...props}>
	<slot />
</a>

<script>
  function updateActiveLinks() {
    const links = document.querySelectorAll('a.header-nav-link');
    const currentPath = window.location.pathname;
    const subpath = currentPath.match(/[^\/]+/g);

    links.forEach((link) => {
      const href = link.getAttribute('href');
      const isActive = href === currentPath || href === `/${subpath?.[0]}`;
      
      // Remove existing classes
      link.classList.remove('text-black', 'dark:text-white', 'text-gray-400', 'dark:text-gray-500');
      
      // Add appropriate classes based on active state
      if (isActive) {
        link.classList.add('text-black', 'dark:text-white');
      } else {
        link.classList.add('text-gray-400', 'dark:text-gray-500');
      }
    });
  }

  // Update on initial load
  updateActiveLinks();

  // Update when Astro handles client-side navigation
  document.addEventListener('astro:after-swap', updateActiveLinks);
</script>
